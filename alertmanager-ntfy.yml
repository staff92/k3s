# Default values for ntfy-alertmanager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: xenrox/ntfy-alertmanager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

ntfyAlertmanager:
  port: 80
  # Log level (either debug, info, warning, error)
  logLevel: debug
  ## Optionally protect with HTTP basic authentication
  ntfy:
    # URL of the ntfy topic - required
    topic: http://ntfy/test
    ## ntfy access control (https://ntfy.sh/docs/config/#access-control)
  # alertmanager:
  #   silence-duration: 24h
  #   url: http://alertmanager-operated.monitoring:9093
  labels:
    order:
      - severity
      - instance
    entries:
      - label: severity
        value: critical
        priority: 5
        tags:
          - "rotating_light"
      - label: severity
        value: info
        priority: 1
      - label: instance
        value: example.com
        tags:
          - computer
          - example
  resolved:
    tags:
      - "resolved"
      - "partying_face"
  

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podLabels: {}
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
